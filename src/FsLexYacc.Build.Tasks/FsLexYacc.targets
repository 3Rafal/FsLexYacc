<!--
***********************************************************************************************
FsLexYacc.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
		  created a backup copy.  Incorrect changes to this file will make it
		  impossible to load or build your projects from the command-line or the IDE.

PowerPack build rules.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<CompileDependsOn>CallFsLex;CallFsYacc;$(CompileDependsOn)</CompileDependsOn>
	</PropertyGroup>

	<!-- Build FsLex files. -->
	<Target
		Name="CallFsLex"
		Inputs="@(FsLex)"
		Outputs="@(FsLex->'$(FsLexOutputFolder)%(Filename).fs')"
		Condition="'@(FsLex)'!=''">

		<!-- Create the output directory -->
		<MakeDir Directories="$(FsLexOutputFolder)"/>
		<!-- Call FsLex -->
		<PropertyGroup>
			<FsLexToolPath Condition="'$(FsLexToolPath)' == ''">$(MSBuildThisFileDirectory)</FsLexToolPath>
			<FsLexToolExe Condition="'$(FsLexToolExe)' == ''">fslex.exe</FsLexToolExe>
			<_Command>$(FsLexToolPath)\$(FsLexToolExe)  -o &quot;$(FsLexOutputFolder)%(FsLex.Filename).fs&quot; %(FsLex.OtherFlags) %(FsLex.Identity)</_Command>
			<_Command Condition="'%(FsLex.CodePage)' != ''">$(_Command) --codepage %(FsLex.CodePage)</_Command>
			<_Command Condition="'%(FsLex.Unicode)' == 'true'">$(_Command) --unicode</_Command>
		</PropertyGroup>
		<Exec Command="$(_Command)" />
		<!-- Make sure it will get cleaned  -->
		<CreateItem Include="$(FsLexOutputFolder)%(FsLex.Filename).fs">
			<Output TaskParameter="Include" ItemName="FileWrites"/>
		</CreateItem>
	</Target>

	<!-- Build FsYacc files. -->
	<Target
		Name="CallFsYacc"
		Inputs="@(FsYacc)"
		Outputs="@(FsYacc->'$(FsYaccOutputFolder)%(Filename).fs')"
		Condition="'@(FsYacc)'!=''">

		<!-- Create the output directory -->
		<MakeDir Directories="$(FsYaccOutputFolder)"/>
		<!-- Call FsYacc -->
		<PropertyGroup>
			<FsYaccToolPath Condition="'$(FsYaccToolPath)' == ''">$(MSBuildThisFileDirectory)</FsYaccToolPath>
			<FsYaccToolExe Condition="'$(FsYaccToolExe)' == ''">fsyacc.exe</FsYaccToolExe>
			<_Command>$(FsYaccToolPath)\$(FsYaccToolExe)  -o &quot;$(FsYaccOutputFolder)%(FsYacc.Filename).fs&quot; %(FsYacc.OtherFlags) %(FsYacc.Identity)</_Command>
			<_Command Condition="'%(FsYacc.CodePage)' != ''">$(_Command) --codepage %(FsYacc.CodePage)</_Command>
			<_Command Condition="'%(FsYacc.Unicode)' == 'true'">$(_Command) --unicode</_Command>
			<_Command Condition="'%(FsYacc.Open)' != ''">$(_Command)  --open %(FsYacc.Open)</_Command>
			<_Command Condition="'%(FsYacc.Module)' != ''">$(_Command)  --module %(FsYacc.Module)</_Command>
		</PropertyGroup>
		<Exec Command="$(_Command)" />

		<!-- Make sure it will get cleaned  -->
		<CreateItem Include="$(FsYaccOutputFolder)%(FsYacc.Filename).fs">
			<Output TaskParameter="Include" ItemName="FileWrites"/>
		</CreateItem>
	</Target>
	<ItemGroup>
		<AvailableItemName Include="FsLex">
			<Visible>false</Visible>
		</AvailableItemName>
		<AvailableItemName Include="FsYacc">
			<Visible>false</Visible>
		</AvailableItemName>
	</ItemGroup>
</Project>


